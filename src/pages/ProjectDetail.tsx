import { useParams, Link } from "react-router-dom";
import { ArrowLeft, ExternalLink, Calendar, Users, Target, TrendingUp, X } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Dialog, DialogContent, DialogTrigger } from "@/components/ui/dialog";
import { useState } from "react";

const ProjectDetail = () => {
  const { id } = useParams();
  // ...existing code...

  // Mock project data - in real app, this would come from an API or database
  const projects = {
    "P√°gina de Concurso P√∫blico ‚Äì Qconcursos": {
      title: "P√°gina de Concurso P√∫blico ‚Äì Qconcursos",
      subtitle: "Redesign da principal p√°gina informativa da plataforma, voltada para tr√°fego e ativa√ß√£o de usu√°rios",
      role: ["UX end-to-end", "Arquitetura de Informa√ß√£o", "Design System"],
      context: "A p√°gina de concursos p√∫blicos do Qconcursos √© uma das principais portas de entrada da plataforma. Ela precisava ser redesenhada para aumentar a taxa de cadastro, melhorar o engajamento e transmitir autoridade sobre os concursos divulgados.",
      problem: 'Concursos p√∫blicos n√£o seguem um padr√£o fixo: variam em n√∫mero de etapas, completude de dados e formato de edital. Alguns concursos t√™m sete fases detalhadas, outros oferecem poucas ou nenhuma informa√ß√£o. Era necess√°rio criar uma arquitetura capaz de se adaptar a essas diferen√ßas, mantendo a clareza e utilidade para o usu√°rio.\n\nAl√©m disso, existiam diferentes n√≠veis de navega√ß√£o (usu√°rio deslogado, logado, assinante, aluno de curso) e era essencial comunicar bem com todos eles, respeitando restri√ß√µes e liberando conte√∫dos conforme o tipo de acesso.\n\nPor fim, tamb√©m havia uma necessidade interna do time editorial: os stakeholders respons√°veis pelo cadastro e atualiza√ß√£o de concursos precisavam de uma estrutura que permitisse tanto automa√ß√µes quanto atualiza√ß√µes manuais em concursos estrat√©gicos. A p√°gina precisava atender tanto o usu√°rio final quanto o fluxo interno da empresa.',
      process: [
        "Mergulho profundo no banco de dados e l√≥gica de estrutura dos concursos",
        "Mapeamento de comportamentos dos usu√°rios com diferentes n√≠veis de acesso",
        "UX research qualitativa com usu√°rios de topo e meio de funil",
        "Benchmark com sites de prefeituras, bancas organizadoras e concorrentes",
        "Redesenho da arquitetura de informa√ß√£o para suportar flexibilidade e clareza",
        "Cria√ß√£o de componentes modulares com l√≥gica condicional",
        "Interface adaptada para priorizar informa√ß√µes na primeira dobra (com foco em 1366px de largura)",
        "Valida√ß√µes com equipe editorial para garantir facilidade de uso interno",
        "Testes com usu√°rios e itera√ß√µes baseadas em dados do Amplitude"
      ],
      results: [
        "üìà +5% de aumento em novos cadastros",
        "üß≠ +70% de engajamento m√©dio com a nova p√°gina",
        "üìö Mais usu√°rios iniciando a√ß√µes de estudo diretamente a partir da p√°gina",
        "üîó Aumento nas navega√ß√µes para planos de estudo, videoaulas e simulados",
        "‚öôÔ∏è P√°gina se tornou base confi√°vel para atualiza√ß√µes manuais de concursos estrat√©gicos",
        "üåê Melhora na performance de SEO e uso da p√°gina como canal de aquisi√ß√£o org√¢nica",
        "üèõÔ∏è Fortalecimento da autoridade do Qconcursos como refer√™ncia sobre concursos p√∫blicos"
      ],
      images: [
        "/capa1.png",
        "/galeria1.png",
        "/galeria1-1.png"
      ],
      figmaUrl: "https://www.figma.com/proto/6ys2zLG6RES11a6Cipp2Bp/P%C3%A1gina-de-Concurso---Qconcursos?node-id=1-22684&p=f&t=Gqs5LvCatZOD6dX3-1&scaling=scale-down&content-scaling=fixed&page-id=0%3A1&embed_host=share",
      tags: ["UX Research", "UI Strategy", "Banco de Dados", "Dados Complexos", "SEO", "Plataformas Educacionais"]
    },
    "ai-assistant": {
      title: "AI Assistant Interface",
      subtitle: "Design de chatbot inteligente para suporte ao cliente",
      period: "4 meses",
      team: "3 pessoas",
      role: "Product Designer",
      context: "Empresa de e-commerce queria implementar um assistente de IA para melhorar o atendimento ao cliente e reduzir custos operacionais.",
      problem: "Alto volume de tickets de suporte, demora no atendimento e baixa satisfa√ß√£o do cliente. Necessidade de uma solu√ß√£o automatizada mas humanizada.",
      process: [
        "An√°lise dos principais tipos de d√∫vidas dos clientes",
        "Research sobre conversational design",
        "Cria√ß√£o de persona e tom de voz do assistant",
        "Design de fluxos conversacionais",
        "Prototipagem de intera√ß√µes complexas",
        "Testes A/B com diferentes abordagens",
        "Integra√ß√£o com sistema de fallback humano"
      ],
      results: [
        "70% de redu√ß√£o em tickets de suporte",
        "85% de satisfa√ß√£o nas intera√ß√µes",
        "3x mais r√°pido que atendimento humano",
        "30% de aumento nas vendas assistidas"
      ],
      images: [
        "/placeholder.svg",
        "/placeholder.svg",
        "/placeholder.svg"
      ],
      figmaUrl: "https://www.figma.com/proto/6ys2zLG6RES11a6Cipp2Bp/P%C3%A1gina-de-Concurso---Qconcursos?node-id=1-22684&p=f&t=Gqs5LvCatZOD6dX3-1&scaling=scale-down&content-scaling=fixed&page-id=0%3A1&embed_host=share",
      tags: ["Conversational Design", "AI/ML", "Customer Support", "E-commerce"]
    },
    "mobile-banking": {
      title: "App de Banking Mobile",
      subtitle: "Aplicativo completo para banco digital",
      period: "8 meses",
      team: "6 pessoas",
      role: "Senior UX Designer",
      context: "Banco tradicional precisava lan√ßar sua vers√£o digital para competir com fintechs emergentes e atender a demanda por servi√ßos mobile-first.",
      problem: "Clientes jovens migrando para bancos digitais, processos burocr√°ticos e interface desatualizada do app atual.",
      process: [
        "Research com usu√°rios de bancos digitais",
        "Mapeamento de jornada atual vs. ideal",
        "Benchmark com principais players do mercado",
        "Arquitetura de informa√ß√£o e card sorting",
        "Design system mobile-first",
        "Prototipagem de alta fidelidade",
        "Testes de usabilidade em dispositivos reais",
        "Compliance com regulamenta√ß√µes banc√°rias"
      ],
      results: [
        "90% de ado√ß√£o entre clientes jovens",
        "4.8 estrelas na App Store",
        "60% de redu√ß√£o em liga√ß√µes para SAC",
        "15% de aumento na abertura de contas"
      ],
      images: [
        "/placeholder.svg",
        "/placeholder.svg",
        "/placeholder.svg",
        "/placeholder.svg",
        "/placeholder.svg"
      ],
      figmaUrl: "https://www.figma.com/proto/6ys2zLG6RES11a6Cipp2Bp/P%C3%A1gina-de-Concurso---Qconcursos?node-id=1-22684&p=f&t=Gqs5LvCatZOD6dX3-1&scaling=scale-down&content-scaling=fixed&page-id=0%3A1&embed_host=share",
      tags: ["Mobile Design", "Banking", "Security", "User Journey"]
    }
  };

  // ...existing code...
  // Lookup project after projects declaration
  const project = projects[decodeURIComponent(id ?? "") as keyof typeof projects];

  if (!project) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-foreground mb-4">Projeto n√£o encontrado</h1>
          <Link to="/">
            <Button variant="outline">
              <ArrowLeft className="w-4 h-4 mr-2" />
              Voltar ao in√≠cio
            </Button>
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background" style={{ scrollBehavior: 'auto' }}>
      {/* Scroll to top on component mount */}
      {(() => {
        window.scrollTo(0, 0);
        return null;
      })()}
      {/* Header */}
      <header className="border-b border-border/50 p-6">
        <div className="fluid-container">
          <Link to="/">
            <Button variant="ghost" className="mb-4 hover-glow">
              <ArrowLeft className="w-4 h-4 mr-2" />
              Voltar ao portf√≥lio
            </Button>
          </Link>
          
          <div className="mb-6">
            <h1 className="text-fluid-3xl font-bold text-gradient mb-2">
              {project.title}
            </h1>
            <p className="text-fluid-xl text-muted-foreground">
              {project.subtitle}
            </p>
          </div>

          {/* Project Meta */}
          <div className="flex flex-wrap gap-4 mb-6">
            {"period" in project && project.period && (
              <div className="flex items-center text-sm text-muted-foreground bg-card/10 px-3 py-2 rounded-lg">
                <Calendar className="w-4 h-4 mr-2" />
                {project.period}
              </div>
            )}
            {"team" in project && project.team && (
              <div className="flex items-center text-sm text-muted-foreground bg-card/10 px-3 py-2 rounded-lg">
                <Users className="w-4 h-4 mr-2" />
                {project.team}
              </div>
            )}
            {Array.isArray(project.role)
              ? project.role.map((roleTag, idx) => (
                  <div key={idx} className="text-sm font-medium text-primary bg-primary/10 px-3 py-2 rounded-lg">
                    {roleTag}
                  </div>
                ))
              : (
                  <div className="text-sm font-medium text-primary bg-primary/10 px-3 py-2 rounded-lg">
                    {project.role}
                  </div>
                )}
          </div>

          {/* Tags */}
          <div className="flex flex-wrap gap-2">
            {project.tags.map((tag, index) => (
              <span key={index} className="text-xs bg-card/30 text-muted-foreground px-2 py-1 rounded-lg">
                {tag}
              </span>
            ))}
          </div>
        </div>
      </header>

      <main className="fluid-container py-12">
        {/* Hero Image */}
        <div className="mb-12">
          <img 
            src={project.images[0]} 
            alt={project.title}
            className="w-full h-96 object-cover rounded-2xl shadow-elegant"
          />
        </div>

        <div className="grid lg:grid-cols-3 gap-12">
          {/* Main Content */}
          <div className="lg:col-span-2">
            {/* Context */}
            <section className="mb-10">
              <h2 className="text-fluid-2xl font-bold text-foreground mb-4 flex items-center">
                <Target className="w-5 h-5 text-primary mr-3" />
                Contexto
              </h2>
              <p className="text-muted-foreground leading-relaxed">
                {project.context}
              </p>
            </section>

            {/* Problem */}
            <section className="mb-10">
              <h2 className="text-fluid-2xl font-bold text-foreground mb-4">
                Problema
              </h2>
              <p className="text-muted-foreground leading-relaxed">
                {project.problem}
              </p>
            </section>

            {/* Process */}
            <section className="mb-10">
              <h2 className="text-fluid-2xl font-bold text-foreground mb-6">
                Processo
              </h2>
              <div className="space-y-3">
                {project.process.map((step, index) => (
                  <div key={index} className="flex items-start">
                    <div className="w-6 h-6 gradient-primary rounded-full flex items-center justify-center mr-4 mt-1 flex-shrink-0">
                      <span className="text-primary-foreground text-xs font-bold">{index + 1}</span>
                    </div>
                    <p className="text-muted-foreground leading-relaxed">{step}</p>
                  </div>
                ))}
              </div>
            </section>

            {/* Figma Preview */}
            {project.figmaUrl && (
              <section className="mb-10">
                <h2 className="text-fluid-2xl font-bold text-foreground mb-6">
                  Preview do Figma
                </h2>
                <div className="w-full h-96 rounded-xl overflow-hidden shadow-elegant">
                  <iframe 
                    src={project.figmaUrl}
                    width="100%" 
                    height="100%" 
                    allowFullScreen
                    className="border-0"
                  />
                </div>
              </section>
            )}

            {/* Gallery */}
            <section className="mb-10">
              <h2 className="text-fluid-2xl font-bold text-foreground mb-6">
                Galeria do Projeto
              </h2>
              <div className="grid sm:grid-cols-2 gap-4">
                {project.images.slice(1).map((image, index) => (
                  <Dialog key={index}>
                    <DialogTrigger asChild>
                      <img 
                        src={image} 
                        alt={`${project.title} - Imagem ${index + 2}`}
                        className="w-full h-64 object-cover rounded-xl hover-float transition-smooth cursor-pointer"
                      />
                    </DialogTrigger>
                    <DialogContent className="max-w-4xl max-h-[90vh] p-0">
                      <img 
                        src={image} 
                        alt={`${project.title} - Imagem ${index + 2}`}
                        className="w-full h-full object-contain"
                      />
                    </DialogContent>
                  </Dialog>
                ))}
              </div>
            </section>
          </div>

          {/* Sidebar */}
          <div className="lg:col-span-1">
            <div className="sticky top-6">
              {/* Results */}
              <div className="glass-card p-6 mb-6">
                <h3 className="text-lg font-bold text-foreground mb-4 flex items-center">
                  <TrendingUp className="w-5 h-5 text-primary mr-2" />
                  Resultados
                </h3>
                <div className="space-y-3">
                  {project.results.map((result, index) => (
                    <div key={index} className="flex items-start">
                      <div className="w-2 h-2 gradient-primary rounded-full mt-2 mr-3 flex-shrink-0"></div>
                      <span className="text-muted-foreground text-sm leading-relaxed">{result}</span>
                    </div>
                  ))}
                </div>
              </div>

              {/* CTA */}
              <div className="glass-card p-6">
                <h3 className="text-lg font-bold text-foreground mb-4">
                  Gostou do projeto?
                </h3>
                <p className="text-muted-foreground text-sm mb-4">
                  Vamos conversar sobre como posso ajudar o seu produto.
                </p>
                <Button className="w-full hover-glow">
                  <ExternalLink className="w-4 h-4 mr-2" />
                  Entre em contato
                </Button>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
};

export default ProjectDetail;